Q) Write a java program to find out leader element from given array?

input:
	4 9 34 5 12 1 9 

output:
	9 12 34

ex:
class Test  
{
	public static void main(String[] args) 
	{
		int[] arr={4,9,34,5,12,1,9}; 
		
		int max=arr[arr.length-1];
		
		System.out.print(max+" ");
		
		for(int i=arr.length-2;i>=0;i--)
		{
			if(arr[i]>max)
			{
				max=arr[i];
				System.out.print(max+" ");
			}
		}

	}
}

Q) Write a java program to display pair of array elements equals to sum ?

input:
	arr = 3 6 1 4 9 2 7 
	sum = 10
output:
	3 7
	6 4 
	1 9

ex:

class Test  
{
	public static void main(String[] args) 
	{
		int[] arr={3,6,1,4,9,2,7}; 
		int sum=10;

		for(int i=0;i<arr.length;i++)
		{
			for(int j=i+1;j<arr.length;j++)
			{
				if(arr[i]+arr[j]==sum)
				{
					System.out.println(arr[i]+" "+arr[j]);
				}
			}
		}
	}
}

Q) Write a java program to display triplet of array elements equals to sum ?

input:
	arr = 3 6 1 4 9 2 7 
	sum = 10
output:
	3 6 1 
	1 2 7

ex:
class Test  
{
	public static void main(String[] args) 
	{
		int[] arr={3,6,1,4,9,2,7}; 
		int sum=10;

		for(int i=0;i<arr.length;i++)
		{
			for(int j=i+1;j<arr.length;j++)
			{
				for(int k=j+1;k<arr.length;k++)
				{
					if(arr[i]+arr[j]+arr[k]==sum)
					{
						System.out.println(arr[i]+" "+arr[j]+" "+arr[k]);
					}
				}
			}
		}

	}
}

Q) Write a java program to delete first occurance of a given element?

input:
	arr = 5 2 9 1 2 6 7 2 
	element = 2 

output:
	5 9 1 2 6 7 2 

class Test  
{
	public static void main(String[] args) 
	{
		int[] arr ={5,2,9,1,2,6,7,2}; 
		int element=2;
		
		int cnt=0;
		for(int i:arr)
		{
			if(i==element && cnt==0)
			{
				cnt=1;
				continue;
			}
			System.out.print(i+" ");
		}

	}
}

Q) Write a java program to insert element on given index?

input:
	arr = 6 2 9 1 4 3 7 
	index = 3
	element = 10
	

output:
	6 2 9 10 1 4 3 7 

import java.util.Arrays;
class Test  
{
	public static void main(String[] args) 
	{
		int[] arr ={6,2,9,1,4,3,7};
		int index = 3;
		int element=10;	
		
		arr=Arrays.copyOf(arr,arr.length+1);
		
		for(int i=arr.length-1;i>=index;i--)
		{
			arr[i]=arr[i-1];
		}
		arr[index]=element;

		//display 
		for(int i:arr)
		{
			System.out.print(i+" ");
		}
	}
}
	

Q) Write a java program to identify and print all elements in an array that are greater
than both their immediate predecessors and successors, considering the first and
last elements as having only one neighbor?

Input:
	1 3 20 4 75 0 90
Output:
	20 75 90

ex:

class Test  
{
	public static void main(String[] args) 
	{
		int[] arr={1,3,20,4,75,0,90};
		
		//first element 
		if(arr[0]>arr[1])
		{
			System.out.print(arr[0]+" ");
		}
		
		//middle elements
		for(int i=1;i<arr.length-1;i++)
		{
			if(arr[i]>arr[i-1] && arr[i]>arr[i+1])
			{
				System.out.print(arr[i]+" ");
			}
		}
		
		//last element
		if(arr[arr.length-1]>arr[arr.length-2])
		{
			System.out.print(arr[arr.length-1]);	
		}
	}
}



Q) 
Write a java program to determine the smallest number of coins needed to total
86 rupees. Use the denominations provided in the array {1,2,5,10}?

Output:
	1 coin(s) of 1 rupee(s)
	1 coin(s) of 5 rupee(s)
	8 coin(s) of 10 rupee(s)

ex:

class Test  
{
	public static void main(String[] args) 
	{
		int[] denominations={1,2,5,10};
		int amount=86;
		//caller method
		int[] result=findMinimumCoins(denominations,amount);
		
		for(int i=0;i<result.length;i++)
		{
			if(result[i]>0)
			{
				System.out.println(result[i]+" coin(s) of "+denominations[i]+" rupee(s)");
			}
		}
		
	}
	//callie method 
	public static int[] findMinimumCoins(int[] denominations,int amount)
	{
		int[] coinsCount=new int[denominations.length];
		
		for(int i=denominations.length-1;i>=0;i--)
		{
			coinsCount[i]=amount/denominations[i];	
			
			amount%=denominations[i];
		}
		
		return coinsCount;
	}
}


























