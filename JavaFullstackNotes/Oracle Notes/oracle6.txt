Integrity Constraints
======================
Constraints are the rules which are applied on the tables.

Using constraints we can achieve accuracy and quality of data.

We have five types of constraints.

1) NOT NULL 

2) UNIQUE

3) PRIMARY KEY 

4) FOREIGN KEY  

5) CHECK 

Constraints are created at two levels.

i) Table level

ii) Column level 


1) NOT NULL
-----------
NOT NULL constraint does not accept null values.

NOT NULL will accept duplicate values.

NOT NULL constraint can be created only at column level.

column level
-----------
drop table student;

create table student(sno number(3) NOT NULL,sname varchar2(10),sadd varchar2(12));

insert into student values(101,'raja','hyd');

insert into student values(101,'ravi','delhi');

insert into student values(null,'ravi','delhi'); //invalid 

commit;

Note:
----
NOT NULL constraint can be applied to multiple columns.

ex:
drop table student;

create table student(sno number(3) NOT NULL,
				sname varchar2(10) NOT NULL,
					sadd varchar2(12) NOT NULL);

insert into student values(101,'raja','hyd');

insert into student values(null,'ravi','delhi'); //invalid 

insert into student values(102,null,'delhi'); //invalid 

insert into student values(102,'ravi',null); //invalid 

commit;


2) UNIQUE
----------
UNIQUE constraint does not accept duplicate values.

UNIQUE constraint can accept null values.

UNIQUE constraint can be created at column level and table level.

column level
------------
drop table student;

create table student(sno number(3) UNIQUE,sname varchar2(10),sadd varchar2(12));

insert into student values(101,'raja','hyd');

insert into student values(null,'ravi','delhi');

insert into student values(101,'ramana','vizag'); // invalid 

commit;

table level
------------
drop table student;

create table student(sno number(3) ,sname varchar2(10),sadd varchar2(12),UNIQUE(sno));

insert into student values(101,'raja','hyd');

insert into student values(null,'ravi','delhi');

insert into student values(101,'ramana','vizag'); // invalid 

commit;

Note:
-----
UNIQUE constraint can be created for multiple columns.

ex:

drop table student;

create table student(sno number(3) UNIQUE,
				sname varchar2(10) UNIQUE,
					sadd varchar2(12) UNIQUE);

insert into student values(101,'raja','hyd');

insert into student values(101,'ravi','delhi');//invalid 

insert into student values(102,'raja','delhi'); //invalid

insert into student values(103,'ramana','hyd'); //invalid  

3) Primary Key
===============
Primary key is a combination of NOT NULL and UNIQUE constraint.

Primary key does not accept null values and duplicate values.

A table can have only one primary key.

Primary key can be created at column level and table level.


column level
------------
drop table student;

create table student(sno number(3) primary key,sname varchar2(10),sadd varchar2(12));

insert into student values(101,'raja','hyd');

insert into student values(101,'ravi','delhi'); // invalid 

insert into student values(null,'ravi','delhi'); // invalid 

commit;


table level
------------
drop table student;

create table student(sno number(3) ,sname varchar2(10),sadd varchar2(12),primary key(sno));

insert into student values(101,'raja','hyd');

insert into student values(101,'ravi','delhi'); // invalid 

insert into student values(null,'ravi','delhi'); // invalid 

commit;

4) Foreign key or Referential Integrity constraint
--------------------------------------------------
Foreign key is used to establish the relationship between two tables.

This relationship is called parent and child relationship or master and detailed relationship.

To establish the relationship , a parent table must have primary key or unique key and child table must have foreign key.

Foreign key will accept only those values which are present in primary key.

Foreign key can have duplicates and null values.

A primary key column name and foreign key column name may or may not match but datatype must match.


Diagram: oracle6.1


parent table
------------
drop table college;

create table college(sno number(3) primary key,
			sname varchar2(10),
				sadd varchar2(12));

insert into college values(101,'raja','hyd');
insert into college values(102,'ravi','delhi');
insert into college values(103,'ramana','vizag');
commit;

child table
----------
drop table library;

create table library (roll_no  number(3) REFERENCES college(sno),
				book_name varchar2(12));

insert into library values(101,'java');

insert into library values(102,'oracle');

insert into library values(103,'HTML');

insert into library values(103,'python');

insert into library values(null,'CSS');

insert into library values(104,'JS'); //invalid 

commit;


How to drop the tables
----------------------
In order to drop the tables. First we need to delete child table then parent table.
ex:

	drop table library;
	drop table college;

5) CHECK
-------------
It is used to describe domain of a column.

A domain means what type of values a column must accept.

It can be created at column level and table level.

column level
------------
drop table student;

create table student(sno number(3),sname varchar2(10),
				smarks number(3) check(smarks<=100));

insert into student values(101,'raja',98);

insert into student values(102,'ravi',120); //invalid 

insert into student values(103,'ramana',999); //invalid 

commit;


ex:
----
drop table student;

create table student(sno number(3),
			sname varchar2(10) CHECK(sname=lower(sname)),
				sadd varchar2(12));

insert into student values(101,'raja','hyd');

insert into student values(102,'RAVI','delhi'); //invalid 

insert into student values(103,'RaMaNa','vizag'); //invalid 

commit;


ex:
----
drop table student;

create table student(sno number(3),
			sname varchar2(10) CHECK(sname=upper(sname)),
				sadd varchar2(12));

insert into student values(101,'RAJA','hyd');

insert into student values(102,'ravi','delhi'); //invalid 

insert into student values(103,'RaMaNa','vizag'); //invalid 

commit;

table level
-----------

ex:
----
drop table student;

create table student(sno number(3),
			sname varchar2(10) ,
				sadd varchar2(12), CHECK(sname=upper(sname)));

insert into student values(101,'RAJA','hyd');

insert into student values(102,'ravi','delhi'); //invalid 

insert into student values(103,'RaMaNa','vizag'); //invalid 

commit;


Q)  How can we add the constraint to the existing table?

	alter table emp add primary key(eid);	


Q) How to delete the constraint from table?

	alter table emp drop primary key;


Assignment
----------
	Customer table 
		custId
		custName
		custAddress

	Item table 
		item_custId
		itemId
		itemName
		itemPrice

	Payment table
		pay_custId 
		paymentId
		paymentAmount
		paymentMode 




























































































